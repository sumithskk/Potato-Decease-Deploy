{"version":3,"sources":["bg.jpg","cblogo.PNG","home.js","App.js","reportWebVitals.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","axios","require","default","useStyles","makeStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","classes","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","isLoading","setIsloading","confidence","sendFile","a","formData","FormData","append","method","url","process","res","status","useEffect","objectUrl","URL","createObjectURL","undefined","parseFloat","toFixed","Fragment","AppBar","position","className","Toolbar","Typography","title","variant","noWrap","Container","disableGutters","Grid","container","direction","item","xs","Card","CardActionArea","CardMedia","component","CardContent","content","acceptedFiles","dropzoneText","style","onChange","files","length","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","class","CircularProgress","onClick","startIcon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eea8950f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.2027a358.jpg\";","export default __webpack_public_path__ + \"static/media/cblogo.fcecc55f.PNG\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogo.PNG\";\r\nimport image from \"./bg.jpg\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#1fafc2',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          <b> Potato Disease Classification</b>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={<> <span style={{ color: '#476390' }}> <b>Upload Image of Potato Plant Leaf</b></span></>}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"riglht\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}